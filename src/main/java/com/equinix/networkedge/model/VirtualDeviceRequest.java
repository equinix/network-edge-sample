/*
 * Network Edge APIs
 * API Documentation for NE's Beta APIs. More information about Network Edge marketplace & NE platform can be found [here](https://ecxfabric-documentation.equinix.com/hc/en-us/articles/360021809172-Enterprise-Network-Edge-Beta-Program-Introduction).
 *
 * OpenAPI spec version: General Availability
 * Contact: Network-Edge-Support@equinix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.networkedge.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import com.equinix.networkedge.model.SshUsers;
import com.equinix.networkedge.model.VirtualDevicHARequest;

import java.util.ArrayList;
import java.util.List;

/**
 * VirtualDeviceRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-20T13:45:54.773-07:00")
public class VirtualDeviceRequest {
  @SerializedName("accountNumber")
  private String accountNumber = null;

  @SerializedName("accountReferenceId")
  private String accountReferenceId = null;

  @SerializedName("deviceTypeCode")
  private String deviceTypeCode = null;

  @SerializedName("hostNamePrefix")
  private String hostNamePrefix = null;

  @SerializedName("licenseFileId")
  private String licenseFileId = null;

  @SerializedName("licenseMode")
  private String licenseMode = null;

  @SerializedName("licenseToken")
  private String licenseToken = null;

  @SerializedName("metroCode")
  private String metroCode = null;

  @SerializedName("packageCode")
  private String packageCode = null;

  @SerializedName("termLength")
  private Integer termLength = null;

  @SerializedName("sshUsers")
  private List<SshUsers> sshUsers = null;

  @SerializedName("throughput")
  private Integer throughput = null;

  @SerializedName("throughputUnit")
  private String throughputUnit = null;

  @SerializedName("virtualDeviceName")
  private String virtualDeviceName = null;

  @SerializedName("notifications")
  private List<String> notifications = new ArrayList<String>();

  @SerializedName("sshAcl")
  private List<String> sshAcl = null;

  @SerializedName("additionalBandwidth")
  private Integer additionalBandwidth = null;

  @SerializedName("siteId")
  private String siteId = null;

  @SerializedName("systemIpAddress")
  private String systemIpAddress = null;

  @SerializedName("secondary")
  private VirtualDevicHARequest secondary = null;

  public VirtualDeviceRequest accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Account number. Either an account number or accountReferenceId is required.
   * @return accountNumber
  **/
  @ApiModelProperty(example = "10478397", value = "Account number. Either an account number or accountReferenceId is required.")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public VirtualDeviceRequest accountReferenceId(String accountReferenceId) {
    this.accountReferenceId = accountReferenceId;
    return this;
  }

   /**
   * AccountReferenceId. This is a temporary ID that can be used to create a device when the account status is still pending, not active. Either an account number or accountReferenceId is required.
   * @return accountReferenceId
  **/
  @ApiModelProperty(example = "209809", value = "AccountReferenceId. This is a temporary ID that can be used to create a device when the account status is still pending, not active. Either an account number or accountReferenceId is required.")
  public String getAccountReferenceId() {
    return accountReferenceId;
  }

  public void setAccountReferenceId(String accountReferenceId) {
    this.accountReferenceId = accountReferenceId;
  }

  public VirtualDeviceRequest deviceTypeCode(String deviceTypeCode) {
    this.deviceTypeCode = deviceTypeCode;
    return this;
  }

   /**
   * Virtual device type (device type code)
   * @return deviceTypeCode
  **/
  @ApiModelProperty(example = "CSR1000V", required = true, value = "Virtual device type (device type code)")
  public String getDeviceTypeCode() {
    return deviceTypeCode;
  }

  public void setDeviceTypeCode(String deviceTypeCode) {
    this.deviceTypeCode = deviceTypeCode;
  }

  public VirtualDeviceRequest hostNamePrefix(String hostNamePrefix) {
    this.hostNamePrefix = hostNamePrefix;
    return this;
  }

   /**
   * Host name prefix for identification. Only a-z, A-Z, 0-9 and hyphen(-) are allowed. It should start with a letter and end with a letter or a digit. Also, it should be minimum 2 and maximum 10 characters long.
   * @return hostNamePrefix
  **/
  @ApiModelProperty(example = "mySR", required = true, value = "Host name prefix for identification. Only a-z, A-Z, 0-9 and hyphen(-) are allowed. It should start with a letter and end with a letter or a digit. Also, it should be minimum 2 and maximum 10 characters long.")
  public String getHostNamePrefix() {
    return hostNamePrefix;
  }

  public void setHostNamePrefix(String hostNamePrefix) {
    this.hostNamePrefix = hostNamePrefix;
  }

  public VirtualDeviceRequest licenseFileId(String licenseFileId) {
    this.licenseFileId = licenseFileId;
    return this;
  }

   /**
   * For Juniper devices you need to provide a licenseFileId if you want to BYOL (Bring Your Own License). You get a licenseFileId when you upload a license file by calling license upload API (Upload a license file before creating a virtual device). For Cisco devices, you do not need to provide a licenseFileId at the time of device creation. Once the device is provisioned, you can get the deviceSerialNo by calling Get virtual device by UUID API. With the deviceSerialNo you can generate a license file on Cisco site. Afterward, you can upload the license file by calling license upload API (Upload a license file after creating a virtual device).
   * @return licenseFileId
  **/
  @ApiModelProperty(example = "d6e21e0c-86dd-11e8-adc0-fa7ae01bbebc", value = "For Juniper devices you need to provide a licenseFileId if you want to BYOL (Bring Your Own License). You get a licenseFileId when you upload a license file by calling license upload API (Upload a license file before creating a virtual device). For Cisco devices, you do not need to provide a licenseFileId at the time of device creation. Once the device is provisioned, you can get the deviceSerialNo by calling Get virtual device by UUID API. With the deviceSerialNo you can generate a license file on Cisco site. Afterward, you can upload the license file by calling license upload API (Upload a license file after creating a virtual device).")
  public String getLicenseFileId() {
    return licenseFileId;
  }

  public void setLicenseFileId(String licenseFileId) {
    this.licenseFileId = licenseFileId;
  }

  public VirtualDeviceRequest licenseMode(String licenseMode) {
    this.licenseMode = licenseMode;
    return this;
  }

   /**
   * License type. One of SUB (Subscription) or BYOL (Bring Your Own License)
   * @return licenseMode
  **/
  @ApiModelProperty(example = "SUB", required = true, value = "License type. One of SUB (Subscription) or BYOL (Bring Your Own License)")
  public String getLicenseMode() {
    return licenseMode;
  }

  public void setLicenseMode(String licenseMode) {
    this.licenseMode = licenseMode;
  }

  public VirtualDeviceRequest licenseToken(String licenseToken) {
    this.licenseToken = licenseToken;
    return this;
  }

  @ApiModelProperty(example = "1", required = true, value = "Term length. 1 Month, 12 months, 24 or 36 months")
  public Integer getTermLength() { return termLength; }
  public void setTermLength(Integer termLength) { this.termLength = termLength; }
  public VirtualDeviceRequest termLength(Integer termLength) { this.termLength = termLength; return this;}

   /**
   * In case you want to BYOL (Bring Your Own License) for a Palo Alto device, you must provide a license token. This field must have 8 alphanumeric characters.
   * @return licenseToken
  **/
  @ApiModelProperty(example = "V74191621", value = "In case you want to BYOL (Bring Your Own License) for a Palo Alto device, you must provide a license token. This field must have 8 alphanumeric characters.")
  public String getLicenseToken() {
    return licenseToken;
  }

  public void setLicenseToken(String licenseToken) {
    this.licenseToken = licenseToken;
  }

  public VirtualDeviceRequest metroCode(String metroCode) {
    this.metroCode = metroCode;
    return this;
  }

   /**
   * Metro code
   * @return metroCode
  **/
  @ApiModelProperty(example = "SV", required = true, value = "Metro code")
  public String getMetroCode() {
    return metroCode;
  }

  public void setMetroCode(String metroCode) {
    this.metroCode = metroCode;
  }

  public VirtualDeviceRequest packageCode(String packageCode) {
    this.packageCode = packageCode;
    return this;
  }

   /**
   * Software package code
   * @return packageCode
  **/
  @ApiModelProperty(example = "IPBASE", value = "Software package code")
  public String getPackageCode() {
    return packageCode;
  }

  public void setPackageCode(String packageCode) {
    this.packageCode = packageCode;
  }

  public VirtualDeviceRequest sshUsers(List<SshUsers> sshUsers) {
    this.sshUsers = sshUsers;
    return this;
  }

  public VirtualDeviceRequest addSshUsersItem(SshUsers sshUsersItem) {
    if (this.sshUsers == null) {
      this.sshUsers = new ArrayList<SshUsers>();
    }
    this.sshUsers.add(sshUsersItem);
    return this;
  }

   /**
   * Array of sshUsernames and passwords
   * @return sshUsers
  **/
  @ApiModelProperty(value = "Array of sshUsernames and passwords")
  public List<SshUsers> getSshUsers() {
    return sshUsers;
  }

  public void setSshUsers(List<SshUsers> sshUsers) {
    this.sshUsers = sshUsers;
  }

  public VirtualDeviceRequest throughput(Integer throughput) {
    this.throughput = throughput;
    return this;
  }

   /**
   * Device throughput. This is required for Cisco and Juniper devices.
   * @return throughput
  **/
  @ApiModelProperty(example = "1", value = "Device throughput. This is required for Cisco and Juniper devices.")
  public Integer getThroughput() {
    return throughput;
  }

  public void setThroughput(Integer throughput) {
    this.throughput = throughput;
  }

  public VirtualDeviceRequest throughputUnit(String throughputUnit) {
    this.throughputUnit = throughputUnit;
    return this;
  }

   /**
   * Throughput unit. This is required for Cisco and Juniper devices.
   * @return throughputUnit
  **/
  @ApiModelProperty(example = "Gbps", value = "Throughput unit. This is required for Cisco and Juniper devices.")
  public String getThroughputUnit() {
    return throughputUnit;
  }

  public void setThroughputUnit(String throughputUnit) {
    this.throughputUnit = throughputUnit;
  }

  public VirtualDeviceRequest virtualDeviceName(String virtualDeviceName) {
    this.virtualDeviceName = virtualDeviceName;
    return this;
  }

   /**
   * Virtual device name for identification. This should be minimum 3 and maximum 50 characters long.
   * @return virtualDeviceName
  **/
  @ApiModelProperty(example = "Router1-csr1000v", required = true, value = "Virtual device name for identification. This should be minimum 3 and maximum 50 characters long.")
  public String getVirtualDeviceName() {
    return virtualDeviceName;
  }

  public void setVirtualDeviceName(String virtualDeviceName) {
    this.virtualDeviceName = virtualDeviceName;
  }

  public VirtualDeviceRequest notifications(List<String> notifications) {
    this.notifications = notifications;
    return this;
  }

  public VirtualDeviceRequest addNotificationsItem(String notificationsItem) {
    this.notifications.add(notificationsItem);
    return this;
  }

   /**
   * Email addresses for notification. We need a minimum of 1 and no more than 5 email addresses.
   * @return notifications
  **/
  @ApiModelProperty(example = "[\"test1@equinix.com\",\"test2@equinix.com\"]", required = true, value = "Email addresses for notification. We need a minimum of 1 and no more than 5 email addresses.")
  public List<String> getNotifications() {
    return notifications;
  }

  public void setNotifications(List<String> notifications) {
    this.notifications = notifications;
  }

  public VirtualDeviceRequest sshAcl(List<String> sshAcl) {
    this.sshAcl = sshAcl;
    return this;
  }

  public VirtualDeviceRequest addSshAclItem(String sshAclItem) {
    if (this.sshAcl == null) {
      this.sshAcl = new ArrayList<String>();
    }
    this.sshAcl.add(sshAclItem);
    return this;
  }

   /**
   * IP addresses, no more than 50, in CIDR format
   * @return sshAcl
  **/
  @ApiModelProperty(example = "[\"192.168.1.1/32\",\"192.168.10.0/24\"]", value = "IP addresses, no more than 50, in CIDR format")
  public List<String> getSshAcl() {
    return sshAcl;
  }

  public void setSshAcl(List<String> sshAcl) {
    this.sshAcl = sshAcl;
  }

  public VirtualDeviceRequest additionalBandwidth(Integer additionalBandwidth) {
    this.additionalBandwidth = additionalBandwidth;
    return this;
  }

   /**
   * Secondary additional bandwidth to be configured (in Mbps for HA). Default bandwidth provided is 15 Mbps.
   * @return additionalBandwidth
  **/
  @ApiModelProperty(example = "100", value = "Secondary additional bandwidth to be configured (in Mbps for HA). Default bandwidth provided is 15 Mbps.")
  public Integer getAdditionalBandwidth() {
    return additionalBandwidth;
  }

  public void setAdditionalBandwidth(Integer additionalBandwidth) {
    this.additionalBandwidth = additionalBandwidth;
  }

  public VirtualDeviceRequest siteId(String siteId) {
    this.siteId = siteId;
    return this;
  }

   /**
   * Get siteId
   * @return siteId
  **/
  @ApiModelProperty(example = "12345", value = "")
  public String getSiteId() {
    return siteId;
  }

  public void setSiteId(String siteId) {
    this.siteId = siteId;
  }

  public VirtualDeviceRequest systemIpAddress(String systemIpAddress) {
    this.systemIpAddress = systemIpAddress;
    return this;
  }

   /**
   * Get systemIpAddress
   * @return systemIpAddress
  **/
  @ApiModelProperty(example = "192.168.2.5", value = "")
  public String getSystemIpAddress() {
    return systemIpAddress;
  }

  public void setSystemIpAddress(String systemIpAddress) {
    this.systemIpAddress = systemIpAddress;
  }

  public VirtualDeviceRequest secondary(VirtualDevicHARequest secondary) {
    this.secondary = secondary;
    return this;
  }

   /**
   * Get secondary
   * @return secondary
  **/
  @ApiModelProperty(value = "")
  public VirtualDevicHARequest getSecondary() {
    return secondary;
  }

  public void setSecondary(VirtualDevicHARequest secondary) {
    this.secondary = secondary;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualDeviceRequest virtualDeviceRequest = (VirtualDeviceRequest) o;
    return Objects.equals(this.accountNumber, virtualDeviceRequest.accountNumber) &&
        Objects.equals(this.accountReferenceId, virtualDeviceRequest.accountReferenceId) &&
        Objects.equals(this.deviceTypeCode, virtualDeviceRequest.deviceTypeCode) &&
        Objects.equals(this.hostNamePrefix, virtualDeviceRequest.hostNamePrefix) &&
        Objects.equals(this.licenseFileId, virtualDeviceRequest.licenseFileId) &&
        Objects.equals(this.licenseMode, virtualDeviceRequest.licenseMode) &&
        Objects.equals(this.licenseToken, virtualDeviceRequest.licenseToken) &&
        Objects.equals(this.metroCode, virtualDeviceRequest.metroCode) &&
        Objects.equals(this.packageCode, virtualDeviceRequest.packageCode) &&
        Objects.equals(this.sshUsers, virtualDeviceRequest.sshUsers) &&
        Objects.equals(this.throughput, virtualDeviceRequest.throughput) &&
        Objects.equals(this.throughputUnit, virtualDeviceRequest.throughputUnit) &&
        Objects.equals(this.virtualDeviceName, virtualDeviceRequest.virtualDeviceName) &&
        Objects.equals(this.notifications, virtualDeviceRequest.notifications) &&
        Objects.equals(this.sshAcl, virtualDeviceRequest.sshAcl) &&
        Objects.equals(this.additionalBandwidth, virtualDeviceRequest.additionalBandwidth) &&
        Objects.equals(this.siteId, virtualDeviceRequest.siteId) &&
        Objects.equals(this.systemIpAddress, virtualDeviceRequest.systemIpAddress) &&
        Objects.equals(this.secondary, virtualDeviceRequest.secondary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumber, accountReferenceId, deviceTypeCode, hostNamePrefix, licenseFileId, licenseMode, licenseToken, metroCode, packageCode, sshUsers, throughput, throughputUnit, virtualDeviceName, notifications, sshAcl, additionalBandwidth, siteId, systemIpAddress, secondary);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualDeviceRequest {\n");
    
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    accountReferenceId: ").append(toIndentedString(accountReferenceId)).append("\n");
    sb.append("    deviceTypeCode: ").append(toIndentedString(deviceTypeCode)).append("\n");
    sb.append("    hostNamePrefix: ").append(toIndentedString(hostNamePrefix)).append("\n");
    sb.append("    licenseFileId: ").append(toIndentedString(licenseFileId)).append("\n");
    sb.append("    licenseMode: ").append(toIndentedString(licenseMode)).append("\n");
    sb.append("    licenseToken: ").append(toIndentedString(licenseToken)).append("\n");
    sb.append("    metroCode: ").append(toIndentedString(metroCode)).append("\n");
    sb.append("    packageCode: ").append(toIndentedString(packageCode)).append("\n");
    sb.append("    sshUsers: ").append(toIndentedString(sshUsers)).append("\n");
    sb.append("    throughput: ").append(toIndentedString(throughput)).append("\n");
    sb.append("    throughputUnit: ").append(toIndentedString(throughputUnit)).append("\n");
    sb.append("    virtualDeviceName: ").append(toIndentedString(virtualDeviceName)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    sshAcl: ").append(toIndentedString(sshAcl)).append("\n");
    sb.append("    additionalBandwidth: ").append(toIndentedString(additionalBandwidth)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    systemIpAddress: ").append(toIndentedString(systemIpAddress)).append("\n");
    sb.append("    secondary: ").append(toIndentedString(secondary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

