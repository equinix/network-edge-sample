/*
 * Network Edge APIs
 * API Documentation for NE's Beta APIs. More information about Network Edge marketplace & NE platform can be found [here](https://ecxfabric-documentation.equinix.com/hc/en-us/articles/360021809172-Enterprise-Network-Edge-Beta-Program-Introduction).
 *
 * OpenAPI spec version: General Availability
 * Contact: Network-Edge-Support@equinix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.networkedge.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * SshUsers
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-20T13:45:54.773-07:00")
public class SshUsers {
    @SerializedName("sshUsername")
    private String sshUsername = null;

    @SerializedName("sshPassword")
    private String sshPassword = null;

    @SerializedName("sshUserUuid")
    private String sshUserUuid = null;

    @SerializedName("action")
    private String action = null;

    public SshUsers sshUsername(String sshUsername) {
        this.sshUsername = sshUsername;
        return this;
    }

    /**
     * sshUsername. This should be minimum 3 and maximum 32 characters and include alphanumeric characters, dash, and underscore.
     *
     * @return sshUsername
     **/
    @ApiModelProperty(example = "cust0001_DC", value = "sshUsername. This should be minimum 3 and maximum 32 characters and include alphanumeric characters, dash, and underscore.")
    public String getSshUsername() {
        return sshUsername;
    }

    public void setSshUsername(String sshUsername) {
        this.sshUsername = sshUsername;
    }

    public SshUsers sshPassword(String sshPassword) {
        this.sshPassword = sshPassword;
        return this;
    }

    /**
     * sshPassword
     *
     * @return sshPassword
     **/
    @ApiModelProperty(example = "projPass", value = "sshPassword")
    public String getSshPassword() {
        return sshPassword;
    }

    public void setSshPassword(String sshPassword) {
        this.sshPassword = sshPassword;
    }

    public SshUsers sshUserUuid(String sshUserUuid) {
        this.sshUserUuid = sshUserUuid;
        return this;
    }

    /**
     * sshUserUuid
     *
     * @return sshUserUuid
     **/
    @ApiModelProperty(example = "999a3aa2-c49a-dddd-98a6-007424e73777", value = "sshUserUuid")
    public String getSshUserUuid() {
        return sshUserUuid;
    }

    public void setSshUserUuid(String sshUserUuid) {
        this.sshUserUuid = sshUserUuid;
    }

    public SshUsers action(String action) {
        this.action = action;
        return this;
    }

    /**
     * action
     *
     * @return action
     **/
    @ApiModelProperty(example = "CREATE", value = "action")
    public String getAction() {
        return action;
    }

    public void setAction(String action) {
        this.action = action;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SshUsers sshUsers = (SshUsers) o;
        return Objects.equals(this.sshUsername, sshUsers.sshUsername) &&
                Objects.equals(this.sshPassword, sshUsers.sshPassword) &&
                Objects.equals(this.sshUserUuid, sshUsers.sshUserUuid) &&
                Objects.equals(this.action, sshUsers.action);
    }

    @Override
    public int hashCode() {
        return Objects.hash(sshUsername, sshPassword, sshUserUuid, action);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SshUsers {\n");

        sb.append("    sshUsername: ").append(toIndentedString(sshUsername)).append("\n");
        sb.append("    sshPassword: ").append(toIndentedString(sshPassword)).append("\n");
        sb.append("    sshUserUuid: ").append(toIndentedString(sshUserUuid)).append("\n");
        sb.append("    action: ").append(toIndentedString(action)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

