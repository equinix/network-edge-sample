/*
 * Network Edge APIs
 * API Documentation for NE's Beta APIs. More information about Network Edge marketplace & NE platform can be found [here](https://ecxfabric-documentation.equinix.com/hc/en-us/articles/360021809172-Enterprise-Network-Edge-Beta-Program-Introduction).
 *
 * OpenAPI spec version: General Availability
 * Contact: Network-Edge-Support@equinix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.networkedge.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * InterfaceBasicInfoResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-20T13:45:54.773-07:00")
public class InterfaceBasicInfoResponse {
  @SerializedName("id")
  private String id = null;

  @SerializedName("ipv4Mask")
  private String ipv4Mask = null;

  @SerializedName("ipv4Subnet")
  private String ipv4Subnet = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("type")
  private String type = null;

  public InterfaceBasicInfoResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "877a3aa2-c49a-4af1-98a6-007424e737ae", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InterfaceBasicInfoResponse ipv4Mask(String ipv4Mask) {
    this.ipv4Mask = ipv4Mask;
    return this;
  }

   /**
   * Get ipv4Mask
   * @return ipv4Mask
  **/
  @ApiModelProperty(example = "255.255.255.0", value = "")
  public String getIpv4Mask() {
    return ipv4Mask;
  }

  public void setIpv4Mask(String ipv4Mask) {
    this.ipv4Mask = ipv4Mask;
  }

  public InterfaceBasicInfoResponse ipv4Subnet(String ipv4Subnet) {
    this.ipv4Subnet = ipv4Subnet;
    return this;
  }

   /**
   * Get ipv4Subnet
   * @return ipv4Subnet
  **/
  @ApiModelProperty(example = "192.168.0.5", value = "")
  public String getIpv4Subnet() {
    return ipv4Subnet;
  }

  public void setIpv4Subnet(String ipv4Subnet) {
    this.ipv4Subnet = ipv4Subnet;
  }

  public InterfaceBasicInfoResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "ethernet1", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InterfaceBasicInfoResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "ASSIGNED", value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public InterfaceBasicInfoResponse type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "DATA", value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InterfaceBasicInfoResponse interfaceBasicInfoResponse = (InterfaceBasicInfoResponse) o;
    return Objects.equals(this.id, interfaceBasicInfoResponse.id) &&
        Objects.equals(this.ipv4Mask, interfaceBasicInfoResponse.ipv4Mask) &&
        Objects.equals(this.ipv4Subnet, interfaceBasicInfoResponse.ipv4Subnet) &&
        Objects.equals(this.name, interfaceBasicInfoResponse.name) &&
        Objects.equals(this.status, interfaceBasicInfoResponse.status) &&
        Objects.equals(this.type, interfaceBasicInfoResponse.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ipv4Mask, ipv4Subnet, name, status, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InterfaceBasicInfoResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ipv4Mask: ").append(toIndentedString(ipv4Mask)).append("\n");
    sb.append("    ipv4Subnet: ").append(toIndentedString(ipv4Subnet)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

