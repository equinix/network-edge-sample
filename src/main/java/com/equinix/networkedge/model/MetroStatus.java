/*
 * Network Edge APIs
 * API Documentation for NE's Beta APIs. More information about Network Edge marketplace & NE platform can be found [here](https://ecxfabric-documentation.equinix.com/hc/en-us/articles/360021809172-Enterprise-Network-Edge-Beta-Program-Introduction).
 *
 * OpenAPI spec version: General Availability
 * Contact: Network-Edge-Support@equinix.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.equinix.networkedge.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;

/**
 * MetroStatus
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-06-20T13:45:54.773-07:00")
public class MetroStatus {
  @SerializedName("created")
  private Boolean created = null;

  @SerializedName("deviceToIpMap")
  private Map<String, String> deviceToIpMap = null;

  @SerializedName("errorCode")
  private String errorCode = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  @SerializedName("status")
  private String status = null;

  public MetroStatus created(Boolean created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public Boolean isCreated() {
    return created;
  }

  public void setCreated(Boolean created) {
    this.created = created;
  }

  public MetroStatus deviceToIpMap(Map<String, String> deviceToIpMap) {
    this.deviceToIpMap = deviceToIpMap;
    return this;
  }

  public MetroStatus putDeviceToIpMapItem(String key, String deviceToIpMapItem) {
    if (this.deviceToIpMap == null) {
      this.deviceToIpMap = new HashMap<String, String>();
    }
    this.deviceToIpMap.put(key, deviceToIpMapItem);
    return this;
  }

   /**
   * Get deviceToIpMap
   * @return deviceToIpMap
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getDeviceToIpMap() {
    return deviceToIpMap;
  }

  public void setDeviceToIpMap(Map<String, String> deviceToIpMap) {
    this.deviceToIpMap = deviceToIpMap;
  }

  public MetroStatus errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @ApiModelProperty(value = "")
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }

  public MetroStatus errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @ApiModelProperty(value = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public MetroStatus status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetroStatus metroStatus = (MetroStatus) o;
    return Objects.equals(this.created, metroStatus.created) &&
        Objects.equals(this.deviceToIpMap, metroStatus.deviceToIpMap) &&
        Objects.equals(this.errorCode, metroStatus.errorCode) &&
        Objects.equals(this.errorMessage, metroStatus.errorMessage) &&
        Objects.equals(this.status, metroStatus.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, deviceToIpMap, errorCode, errorMessage, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetroStatus {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    deviceToIpMap: ").append(toIndentedString(deviceToIpMap)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

